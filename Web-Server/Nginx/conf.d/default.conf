#A SIMPLE ONE
server {
    listen 80;
    listen [::]:80;  #IPV6
    server_name  my-domain.com;   #Settings for this server name
    
    location / {       #Root directory for website
        root /usr/share/nginx/html/main;
        index index.html;    #default page that opens when user requests
    }

}

---
#REVERSE PROXY SERVER
upstream demo {         #Where we want to forward our packets
    server website.com:8000;
}

server {
    listen 80;

    location / {
        proxy_pass http://demo;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        #For enabling forwarding
        proxy_set_header Host $host;        #For name of packet tahts being set, to not be nginx server
    }

    location /static/ {
        alias /home/app/staticfiles/;       #Map url of /static/ to a directory in fileSystem
    }

}

---
#REVERSE PROXY WITH CACHE - BASED ON USER
proxy_cache_path /var/cache/nginx       #Cache Path - here we are using disk, but other tools can be utilized also
                    keys_zone=NginxCache:20m        #MANDATORY - name and 20 Megabytes of cache
                    inactive=60m        #Store it for 60 minutes
                    levels=1:2          #How file structure should be created
                    max_size=10g;       #Max size of cache

upstream demo {
    server website.com:8000;
}

server {
    listen 80;

    location / {
        proxy_pass http://demo;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_cache NginxCache;         #MANDATORY - Reference to cache zone
        proxy_cache_min_uses 5;         #How many times a page visited before its cached
        
        proxy_cache_methods GET;
        proxy_cache_valid 200 10m;
        proxy_cache_valid 404 5m;

        add_header X-Proxy-Cache $upstream_cache_status;        #Add a header to see Whether cache is working or not
    }  

    location /static/ {
        alias /home/app/staticfiles/;
    }

    location /p1 {
        proxy_pass http://demo;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_cache_bypass;          #Bypassing this page from being cached
        proxy_cache off;

        add_header X-Proxy-Cache $upstream_cache_status;
    }

}

---
#REVERSE PROXY WITH CACHE - BASED ON PAGE
proxy_cache_path /var/cache/nginx
                    keys_zone=NginxCache:20m
                    levels=1:2
                    max_size=10g;

upstream demo {
    server website.com:8000;
}

server {
    listen 80;

    location / {
        proxy_pass http://demo;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_cache NginxCache;
        proxy_cache_min_uses 5;
        
        proxy_cache_methods GET;
        proxy_cache_valid 200 10m;
        proxy_cache_valid 404 5m;

        proxy_ignore_headers Vary;  #THIS   <--------

        add_header X-Proxy-Cache $upstream_cache_status;
    }  

    location /static/ {
        alias /home/app/staticfiles/;
    }

    location /p1 {
        proxy_pass http://demo;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_cache_bypass;
        proxy_cache off;

        add_header X-Proxy-Cache $upstream_cache_status;
    }

}

---
#REVERSE PROXY WITH CACHE (BASED ON PAGE, NOT USER) - DONOT USE CACHE IF USER IS LOGGED-IN
proxy_cache_path /var/cache/nginx
                    keys_zone=NginxCache:20m
                    levels=1:2
                    max_size=10g;

upstream demo {
    server website.com:8000;
}

server {
    listen 80;

    location / {
        proxy_pass http://demo;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_cache NginxCache;
        proxy_cache_min_uses 5;
        
        proxy_cache_methods GET;
        proxy_cache_valid 200 10m;
        proxy_cache_valid 404 5m;

        proxy_ignore_headers Vary;
        proxy_cache_bypass  $cookie_sessionid;      #THIS   <--------

        add_header X-Proxy-Cache $upstream_cache_status;
    }  

    location /static/ {
        alias /home/app/staticfiles/;
    }

    location /p1 {
        proxy_pass http://demo;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_cache_bypass;
        proxy_cache off;

        add_header X-Proxy-Cache $upstream_cache_status;
    }

}

---
#SPLIT A/B TESTING

#split_clients "${remote_addr}" $testvariant {          #Not best since IP Address is not best way for slpitting traffic
split_clients "${arg_token}" $testvariant {             #Based on a token, You have to pass token every time you send a packet like: $ crl -X GET "http://127.0.0.1?token=SOME_RANDOM_TOKEN"
         50%         "/home/html/v1";
         *           "/home/html/v2";
}

 server {
     listen 80;

     location / {
         root $testvariant;
         index index.html;
     }
 }


---
#SPLIT A/B TESTING WITH REVERSE PROXY
upstream demo1 {
    server website.com:8000;
}

upstream demo2 {
    server website.com:8000;
}

split_clients "${arg_token}" $variant {
    50% demo1;
    *   demo2;
}

server {
    listen 80;

    location / {
        proxy_pass http://$variant;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
    }

    location /static/ {
        alias /home/app/staticfiles/;
    }

}